#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define FN1 1

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // Base layer
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |NUHS| ENTER   |
            // | SHIFT |NUBS| Z |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |    Shift   | FN |
            // |  LCTL  |  LWIN  |  LALT  | SPACE  | SPACE |    SPACE   |  RALT | FN  |   RWIN  | RCTRL |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&gresc            &kp N1          &kp N2    &kp N3     &kp N4     &kp N5     &kp N6  &kp N7         &kp N8  &kp N9     &kp N0    &kp MINUS  &kp EQUAL  &kp BSLH       &kp DELETE
&kp TAB           &kp Q           &kp W     &kp E      &kp R      &kp T      &kp Y   &kp U          &kp I   &kp O      &kp P     &kp LBKT   &kp RBKT   &kp BACKSPACE
&kp LEFT_CONTROL  &kp A           &kp S     &kp D      &kp F      &kp G      &kp H   &kp J          &kp K   &kp L      &kp SEMI  &kp SQT    &kp ENTER  &kp RET
&kp LSHFT         &kp LEFT_SHIFT  &kp Z     &kp X      &kp C      &kp V      &kp B   &kp N          &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &mo 2
&none             &mo 1           &kp LALT  &kp SPACE  &kp SPACE  &kp SPACE  &none   &kp RIGHT_ALT  &tog 1  &none
&kp C_PP
            >;
        };

        fn_layer {
            // Function layer
            // ------------------------------------------------------------------------------------------
            // | RESET | F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |TRNS | DEL |
            // |BT_CLR |TRNS | UP  | BT0 | BT1 | BT2 | BT3 | BT4 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS|
            // | BOOTL  |LEFT |DOWN |RIGHT|TRNS |TRNS |TRNS | TRNS| TRNS |TRNS| TRNS |TRNS | TRNS | TRNS  |
            // | TRNS |TRNS|TRNS|TRNS|TRNS | TRNS| TRNS | TRNS |  TRNS| TRNS | TRNS| TRNS |   TRNS   |TRNS|
            // |  TRNS | TRNS | TRNS |      TRNS      | TRNS |     TRNS     |  TRNS |  TRNS | TRNS | TRNS |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&kp PRINTSCREEN  &kp F1    &kp F2        &kp F3          &kp F4      &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans           &trans    &kp UP        &trans          &kp C_PREV  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
&trans           &kp LEFT  &kp DOWN      &kp RIGHT       &kp C_NEXT  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
&trans           &trans    &kp LEFT_GUI  &kp C_AL_FILES  &kp K_CALC  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
&trans           &trans    &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
&kp C_PP
            >;
        };

        layer_2 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &bootloader     &bt BT_CLR
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &out OUT_TOG  &trans        &trans        &trans        &bl BL_OFF  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans
&trans
            >;
        };
    };
};
